import React, { useRef, useState, useEffect } from "react";
import addIcon from "../icons/Add.svg";
import SearchIcon from "../icons/SearchIcon.svg";
import Settings from "../icons/Settings.svg";
import Clear from "../icons/CloseBig.svg";
import LectureElement from "./LectureElement";
import server_url from "../site";
import { PongSpinner } from "react-spinners-kit";

import "../styles/createview.scss";
import FileUI from "./FileUI";
function CreateView({ add_lecture, nav, lectures }) {
  const [isLoading, setLoading] = useState(false);
  const fileRef = useRef();
  const [loadCount, setLoadCount] = useState(0);
  const [file, setFile] = useState("");
  const [title, setTitle] = useState("");

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const handleUploadClick = async () => {
    // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    if (!file) {
      console.log("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª");
      return;
    }
    // —Å–æ–∑–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    setLoading(true);
    let res = [];
    // –∏–¥–µ–º –ø–æ —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª–æ–≤ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∂–¥—ã–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    for (let i = 0; i < file.length; i++) {
      setLoadCount(i);
      // —Ñ–æ—Ä–º–∏—Ä—É–µ–º –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
      const formData = new FormData();
      formData.append("file", file[i].file);
      // –ø–æ–ª—É—á–∞–µ–º UID –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
      const data = await (
        await fetch(server_url + `upload-image/?title=${title}`, {
          method: "POST",
          body: formData,
          // üëá Set headers manually for single file upload
          headers: {
            Accept: "*/*",
            "Access-Control-Allow-Origin": "*",
          },
        })
      ).json();
      // –¥–æ–±–∞–≤–ª—è–µ–º UID –≤ –Ω–∞—à —Ä–µ–∑—É–ª—å–∞—Ç
      res.push(data);
    }
    add_lecture(res); // –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    setLoading(false); // –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å
    setFile([]); // —Å—Ç–∏—Ä–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–º—è—Ç–∏
    nav("/"); // –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  };

  return (
    <div className="createViewContainer">
      {isLoading ? (
        <div
          style={{
            display: "flex",
            height: "100vh",
            alignItems: "center",
            justifyContent: "center",
          }}
          className="loading"
        >
          <p>–ó–∞–≥—Ä—É–∂–µ–Ω–æ {Math.round((loadCount / file.length) * 100)} %</p>
          <div className="loadingview">
                <div
                    className="loading"
                >
                    <PongSpinner color="#C11d1d"/>
                </div>
            </div>
        </div>
      ) : (
        [
          <div className="topBarWrapper">
            <div
              onClick={() => {
                nav("/");
              }}
              className="close"
            >
              <img src={Clear} />
            </div>
            <div className="addTitle ">–î–æ–±–∞–≤–∏—Ç—å –°–Ω–∏–º–æ–∫</div>
            <div className="c" />
          </div>,

          <div className="container">
            <FileUI file={file} setFile={setFile} fileRef={fileRef} />
            <div className="input">
              –°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä
              <input
                onChange={(e) => {
                  setTitle(e.target.value);
                }}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä"
              />
            </div>
            <div
              className={"upload button " + (!file || !title ? "not" : "")}
              onClick={handleUploadClick}
            >
              –ì–æ—Ç–æ–≤–æ
            </div>
          </div>,
        ]
      )}
    </div>
  );
}

export default CreateView;
